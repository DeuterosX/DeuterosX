//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Teraluwide.Blackbird.Core.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Teraluwide.Blackbird.Core.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The custom component {0} has already been registered..
        /// </summary>
        public static string ComponentAlreadyRegistered {
            get {
                return ResourceManager.GetString("ComponentAlreadyRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A custom component has no defined type..
        /// </summary>
        public static string ComponentMissingType {
            get {
                return ResourceManager.GetString("ComponentMissingType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The custom component type {0} could not be found..
        /// </summary>
        public static string ComponentTypeNotFound {
            get {
                return ResourceManager.GetString("ComponentTypeNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The custom component type {0} could not be instantized..
        /// </summary>
        public static string ComponentTypeNotInitialized {
            get {
                return ResourceManager.GetString("ComponentTypeNotInitialized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The face &apos;{0}&apos; has already been registered..
        /// </summary>
        public static string FaceAlreadyRegistered {
            get {
                return ResourceManager.GetString("FaceAlreadyRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The font {0} has already been registered..
        /// </summary>
        public static string FontAlreadyRegistered {
            get {
                return ResourceManager.GetString("FontAlreadyRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The font {0} could not be loaded..
        /// </summary>
        public static string FontCouldNotBeLoaded {
            get {
                return ResourceManager.GetString("FontCouldNotBeLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Font definition file version: {0}.
        /// </summary>
        public static string FontDefinitionVersion {
            get {
                return ResourceManager.GetString("FontDefinitionVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The font {0} is not defined..
        /// </summary>
        public static string FontUndefined {
            get {
                return ResourceManager.GetString("FontUndefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mod game info file version: {0}.
        /// </summary>
        public static string GameInfoVersion {
            get {
                return ResourceManager.GetString("GameInfoVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The game screen {0} has already been registered..
        /// </summary>
        public static string GameScreenAlreadyRegistered {
            get {
                return ResourceManager.GetString("GameScreenAlreadyRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game screen definition file version: {0}.
        /// </summary>
        public static string GameScreenDefinitionVersion {
            get {
                return ResourceManager.GetString("GameScreenDefinitionVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A game screen has no defined type..
        /// </summary>
        public static string GameScreenMissingType {
            get {
                return ResourceManager.GetString("GameScreenMissingType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The game screen {0} was not found..
        /// </summary>
        public static string GameScreenNotFound {
            get {
                return ResourceManager.GetString("GameScreenNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The game screen type {0} could not be found..
        /// </summary>
        public static string GameScreenTypeNotFound {
            get {
                return ResourceManager.GetString("GameScreenTypeNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The game screen type {0} could not be instantized..
        /// </summary>
        public static string GameScreenTypeNotInitialized {
            get {
                return ResourceManager.GetString("GameScreenTypeNotInitialized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Virtual path invalid: {0}.
        /// </summary>
        public static string InvalidVirtualPathException {
            get {
                return ResourceManager.GetString("InvalidVirtualPathException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified mod file is in incorrect format: {0}.
        /// </summary>
        public static string ModFileIsInIncorrectFormatException {
            get {
                return ResourceManager.GetString("ModFileIsInIncorrectFormatException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified mod file is in incorrect format: {0}
        ///Value &apos;{1}&apos; is invalid for the option &apos;{2}&apos;..
        /// </summary>
        public static string ModFileIsInIncorrectFormatSpecificException {
            get {
                return ResourceManager.GetString("ModFileIsInIncorrectFormatSpecificException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified mod file wasn&apos;t found: {0}, original path: {1}.
        /// </summary>
        public static string ModFileNotFoundException {
            get {
                return ResourceManager.GetString("ModFileNotFoundException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified mod wasn&apos;t found: {0}.
        /// </summary>
        public static string ModNotFoundException {
            get {
                return ResourceManager.GetString("ModNotFoundException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The texture {0} has already been registered..
        /// </summary>
        public static string TextureAlreadyRegistered {
            get {
                return ResourceManager.GetString("TextureAlreadyRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The texture {0} could not be loaded..
        /// </summary>
        public static string TextureCouldNotBeLoaded {
            get {
                return ResourceManager.GetString("TextureCouldNotBeLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Texture definition file version: {0}.
        /// </summary>
        public static string TextureDefinitionVersion {
            get {
                return ResourceManager.GetString("TextureDefinitionVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The texture {0} was requested without loading..
        /// </summary>
        public static string TextureNotLoaded {
            get {
                return ResourceManager.GetString("TextureNotLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The texture {0} is not defined..
        /// </summary>
        public static string TextureUndefined {
            get {
                return ResourceManager.GetString("TextureUndefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The texture {0} was unloaded too many times..
        /// </summary>
        public static string TextureUserOverflow {
            get {
                return ResourceManager.GetString("TextureUserOverflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type {0} has already been registered..
        /// </summary>
        public static string TypeAlreadyRegistered {
            get {
                return ResourceManager.GetString("TypeAlreadyRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type definition file version: {0}.
        /// </summary>
        public static string TypeDefinitionVersion {
            get {
                return ResourceManager.GetString("TypeDefinitionVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type {0} could not be found..
        /// </summary>
        public static string TypeNotFound {
            get {
                return ResourceManager.GetString("TypeNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type {0} could not be initialized..
        /// </summary>
        public static string TypeNotInitialized {
            get {
                return ResourceManager.GetString("TypeNotInitialized", resourceCulture);
            }
        }
    }
}
